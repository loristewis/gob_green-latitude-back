{
  "kind": "collectionType",
  "collectionName": "events",
  "info": {
    "singularName": "event",
    "pluralName": "events",
    "displayName": "Péripéties / Événements",
    "description": ""
  },
  "options": {
    "draftAndPublish": false
  },
  "pluginOptions": {},
  "attributes": {
    "title": {
      "type": "string"
    },
    "description": {
      "type": "text"
    },
    "choice1_title": {
      "type": "string"
    },
    "choice1_outcomeA_title": {
      "type": "string"
    },
    "choice1_outcomeA_description": {
      "type": "text"
    },
    "choice1_outcomeA_budget": {
      "type": "integer"
    },
    "choice1_outcomeA_pollution": {
      "type": "integer"
    },
    "choice1_outcomeA_wellness": {
      "type": "integer"
    },
    "choice1_outcomeA_probability": {
      "type": "integer"
    },
    "choice1_outcomeB_title": {
      "type": "string"
    },
    "choice1_outcomeB_description": {
      "type": "text"
    },
    "choice1_outcomeB_budget": {
      "type": "integer"
    },
    "choice1_outcomeB_pollution": {
      "type": "integer"
    },
    "choice1_outcomeB_wellness": {
      "type": "integer"
    },
    "choice2_title": {
      "type": "string"
    },
    "choice2_outcomeA_title": {
      "type": "string"
    },
    "choice2_outcomeA_description": {
      "type": "text"
    },
    "choice2_outcomeA_budget": {
      "type": "integer"
    },
    "choice2_outcomeA_pollution": {
      "type": "integer"
    },
    "choice2_outcomeA_wellness": {
      "type": "integer"
    },
    "choice2_outcomeA_probability": {
      "type": "integer"
    },
    "choice2_outcomeB_title": {
      "type": "string"
    },
    "choice2_outcomeB_description": {
      "type": "text"
    },
    "choice2_outcomeB_budget": {
      "type": "integer"
    },
    "choice2_outcomeB_pollution": {
      "type": "integer"
    },
    "choice2_outcomeB_wellness": {
      "type": "integer"
    },
    "destinations": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::destination.destination",
      "inversedBy": "events"
    },
    "accommodations": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::accommodation.accommodation",
      "inversedBy": "events"
    },
    "transports": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::transport.transport",
      "inversedBy": "events"
    }
  }
}
